(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-motion"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "react-motion"], factory);
	else if(typeof exports === 'object')
		exports["ReactCollapse"] = factory(require("react"), require("react-motion"));
	else
		root["ReactCollapse"] = factory(root["React"], root["ReactMotion"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _require = __webpack_require__(1);
	
	var Collapse = _require.Collapse;
	
	
	module.exports = Collapse;

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Collapse = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactMotion = __webpack_require__(3);
	
	var _ReactComponentWithPureRenderMixin = __webpack_require__(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var SPRING_PRECISION = 1;
	
	var WAITING = 'WAITING';
	var RESIZING = 'RESIZING';
	var RESTING = 'RESTING';
	var IDLING = 'IDLING';
	
	var noop = function noop() {
	  return null;
	};
	var css = {
	  collapse: 'ReactCollapse--collapse',
	  content: 'ReactCollapse--content'
	};
	
	var Collapse = exports.Collapse = _react2.default.createClass({
	  displayName: 'Collapse',
	
	  propTypes: {
	    isOpened: _react2.default.PropTypes.bool.isRequired,
	    springConfig: _react2.default.PropTypes.objectOf(_react2.default.PropTypes.number),
	
	    theme: _react2.default.PropTypes.objectOf(_react2.default.PropTypes.string),
	    style: _react2.default.PropTypes.object,
	
	    onRender: _react2.default.PropTypes.func,
	    onRest: _react2.default.PropTypes.func,
	    onMeasure: _react2.default.PropTypes.func,
	
	    children: _react2.default.PropTypes.node.isRequired
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      style: {},
	      theme: css,
	      onRender: noop,
	      onRest: noop,
	      onMeasure: noop
	    };
	  },
	  getInitialState: function getInitialState() {
	    return { currentState: IDLING, from: 0, to: 0 };
	  },
	  componentDidMount: function componentDidMount() {
	    var _props = this.props;
	    var isOpened = _props.isOpened;
	    var onRest = _props.onRest;
	
	    if (isOpened) {
	      var to = this.content.clientHeight;
	      this.setState({ currentState: IDLING, from: to, to: to });
	    }
	    onRest();
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    if (this.state.currentState === IDLING && (nextProps.isOpened || this.props.isOpened)) {
	      this.setState({ currentState: WAITING });
	    }
	  },
	
	
	  shouldComponentUpdate: _ReactComponentWithPureRenderMixin.shouldComponentUpdate,
	
	  componentDidUpdate: function componentDidUpdate(_, prevState) {
	    var _props2 = this.props;
	    var isOpened = _props2.isOpened;
	    var onRest = _props2.onRest;
	    var onMeasure = _props2.onMeasure;
	
	
	    if (this.state.currentState === IDLING) {
	      onRest();
	      return;
	    }
	
	    if (prevState.to !== this.state.to) {
	      onMeasure({ height: this.state.to, width: this.content.clientWidth });
	    }
	
	    var from = this.wrapper.clientHeight;
	    var to = isOpened ? this.content.clientHeight : 0;
	
	    if (from !== to) {
	      this.setState({ currentState: RESIZING, from: from, to: to });
	      return;
	    }
	
	    if (this.state.currentState === RESTING) {
	      this.setState({ currentState: IDLING, from: from, to: to });
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    cancelAnimationFrame(this.raf);
	  },
	  onContentRef: function onContentRef(content) {
	    this.content = content;
	  },
	  onWrapperRef: function onWrapperRef(wrapper) {
	    this.wrapper = wrapper;
	  },
	  onRest: function onRest() {
	    this.raf = requestAnimationFrame(this.setResting);
	  },
	  setResting: function setResting() {
	    this.setState({ currentState: RESTING });
	  },
	  isHeightAuto: function isHeightAuto() {
	    return this.state.currentState === IDLING && this.state.to;
	  },
	  getExtraStyles: function getExtraStyles() {
	    if (this.isHeightAuto()) {
	      return { height: 'auto' };
	    }
	
	    var extraStyle = { overflow: 'hidden' };
	    if (this.state.currentState === WAITING && !this.state.to) {
	      return _extends({}, extraStyle, { height: 0 });
	    }
	
	    return extraStyle;
	  },
	  getMotionProps: function getMotionProps() {
	    var springConfig = this.props.springConfig;
	
	
	    return this.state.currentState === IDLING ? {
	      // When completely stable, instantly jump to the position
	      defaultStyle: { height: this.state.to },
	      style: { height: this.state.to }
	    } : {
	      // Otherwise, animate
	      defaultStyle: { height: this.state.from },
	      style: { height: (0, _reactMotion.spring)(this.state.to, _extends({ precision: SPRING_PRECISION }, springConfig)) }
	    };
	  },
	  renderContent: function renderContent(_ref) {
	    var height = _ref.height;
	    var _props3 = this.props;
	    var _isOpened = _props3.isOpened;
	    var _springConfig = _props3.springConfig;
	    var theme = _props3.theme;
	    var style = _props3.style;
	    var onRender = _props3.onRender;
	    var _onRest = _props3.onRest;
	    var _onMeasure = _props3.onMeasure;
	    var children = _props3.children;
	
	    var props = _objectWithoutProperties(_props3, ['isOpened', 'springConfig', 'theme', 'style', 'onRender', 'onRest', 'onMeasure', 'children']);
	
	    var _state = this.state;
	    var from = _state.from;
	    var to = _state.to;
	
	    // DANGEROUS, use with caution, never do setState with it
	
	    onRender({ current: height, from: from, to: to });
	
	    return _react2.default.createElement(
	      'div',
	      _extends({
	        ref: this.onWrapperRef,
	        className: theme.collapse,
	        style: _extends({}, this.getExtraStyles(), this.isHeightAuto() ? {} : { height: Math.max(0, height) }, style)
	      }, props),
	      _react2.default.createElement(
	        'div',
	        { ref: this.onContentRef, className: theme.content },
	        children
	      )
	    );
	  },
	  render: function render() {
	    return _react2.default.createElement(_reactMotion.Motion, _extends({}, this.getMotionProps(), {
	      onRest: this.onRest,
	      children: this.renderContent }));
	  }
	});

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentWithPureRenderMixin
	 */
	
	'use strict';
	
	var shallowCompare = __webpack_require__(5);
	
	/**
	 * If your React component's render function is "pure", e.g. it will render the
	 * same result given the same props and state, provide this mixin for a
	 * considerable performance boost.
	 *
	 * Most React components have pure render functions.
	 *
	 * Example:
	 *
	 *   var ReactComponentWithPureRenderMixin =
	 *     require('ReactComponentWithPureRenderMixin');
	 *   React.createClass({
	 *     mixins: [ReactComponentWithPureRenderMixin],
	 *
	 *     render: function() {
	 *       return <div className={this.props.className}>foo</div>;
	 *     }
	 *   });
	 *
	 * Note: This only checks shallow equality for props and state. If these contain
	 * complex data structures this mixin may have false-negatives for deeper
	 * differences. Only mixin to components which have simple props and state, or
	 * use `forceUpdate()` when you know deep data structures have changed.
	 *
	 * See https://facebook.github.io/react/docs/pure-render-mixin.html
	 */
	var ReactComponentWithPureRenderMixin = {
	  shouldComponentUpdate: function (nextProps, nextState) {
	    return shallowCompare(this, nextProps, nextState);
	  }
	};
	
	module.exports = ReactComponentWithPureRenderMixin;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule shallowCompare
	*/
	
	'use strict';
	
	var shallowEqual = __webpack_require__(6);
	
	/**
	 * Does a shallow comparison for props and state.
	 * See ReactComponentWithPureRenderMixin
	 * See also https://facebook.github.io/react/docs/shallow-compare.html
	 */
	function shallowCompare(instance, nextProps, nextState) {
	  return !shallowEqual(instance.props, nextProps) || !shallowEqual(instance.state, nextState);
	}
	
	module.exports = shallowCompare;

/***/ },
/* 6 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */
	
	/*eslint-disable no-self-compare */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ }
/******/ ])
});
;
//# sourceMappingURL=react-collapse.js.map